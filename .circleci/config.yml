node_defaults: &node
  working_directory: ~/repo
  docker:
    - image: circleci/node

dev_filter: &devOnly
  branches:
    only: dev

get_latest_version: &getVersion
  name: Set TAG_VERSION and update PATH
  command: >
    echo 'export TAG_VERSION=$((git describe --tags $(git rev-list
    --tags --max-count=1)) | cut -c 2-)' >> $BASH_ENV

    source $BASH_ENV

version: 2
jobs:
  build:
    <<: *node
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm ci
      - persist_to_workspace:
          root: ~/repo
          paths:
            - node_modules
      - run:
          name: Build application
          command: npm run build
  lint:
    <<: *node
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Run TSLint
          command: npm run lint
  install_cc_test_reporter:
    <<: *node
    steps:
      - run:
          name: Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: ~/repo
          paths:
            - tmp/cc-test-reporter
  test:
    <<: *node
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Notify CodeClimate
          command: ./tmp/cc-test-reporter before-build
      - run:
          name: Run Jest
          command: npm run test-ci
      - run:
          name: Report coverage to CodeClimate
          command: ./tmp/cc-test-reporter after-build --exit-code $?

  increment_version:
    <<: *node
    steps:
      - checkout
      - run:
          name: Run semantic-release
          command: npx semantic-release

  push_image:
    machine: true
    steps:
      - checkout
      - run: *getVersion
      - run:
          name: Log in to Docker Hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build image
          command: 'docker build -t osucass/content-specification-explorer-app:$TAG_VERSION -f build/Dockerfile .'
      - run:
          name: Push image to Docker Hub
          command: 'docker push osucass/content-specification-explorer-app:$TAG_VERSION'

  deploy:
    docker:
      - image: dtzar/helm-kubectl
    steps:
      - checkout
      - run: *getVersion
      - run:
          name: Create .kube directory
          command: mkdir ~/.kube
      - run:
          name: Decode kubeconfig
          command: echo $CSE_KUBE_CONFIG | base64 -d > ~/.kube/config
      - run:
          name: Initialize Helm
          command: helm init --client-only
      - run:
          name: Upgrade cluster deployment
          environment:
            CHART_VERSION: 1.0.2
          command: >-
            helm upgrade --set-string app.image.tag=$TAG_VERSION cse --reuse-values
            https://osu-cass.github.io/AP-CSE-Chart/charts/content-specification-explorer-${CHART_VERSION}.tgz

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - lint:
          requires:
            - build
      - install_cc_test_reporter:
          requires:
            - build
      - test:
          requires:
            - install_cc_test_reporter
      - increment_version:
          filters: *devOnly
          # requires:
          #   - test
      - push_image:
          filters: *devOnly
          requires:
            - increment_version
      - deploy:
          filters: *devOnly
          requires:
            - push_image
