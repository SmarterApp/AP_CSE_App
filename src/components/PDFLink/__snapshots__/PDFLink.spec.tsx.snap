// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PDFLink component DownloadIcon component matches snapshot 1`] = `
<Component>
  <div
    className="download"
  >
    <Download
      color="currentColor"
      size="24"
    >
      <svg
        fill="none"
        height="24"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
        viewBox="0 0 24 24"
        width="24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
        />
        <polyline
          points="7 10 12 15 17 10"
        />
        <line
          x1="12"
          x2="12"
          y1="15"
          y2="3"
        />
      </svg>
    </Download>
    <p>
      Download PDF
    </p>
    <style
      jsx={true}
    >
      
      .download {
        font-family: 'PT Sans Caption', sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      p {
        margin-top: 0.5em;
      }
    
    </style>
  </div>
</Component>
`;

exports[`PDFLink component matches snapshot 1`] = `
<div>
  <Component>
    <Component />
  </Component>
</div>
`;

exports[`PDFLink component render function returns a download icon when not loading 1`] = `
<Component>
  <div
    className="download"
  >
    <Download
      color="currentColor"
      size="24"
    >
      <svg
        fill="none"
        height="24"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
        viewBox="0 0 24 24"
        width="24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
        />
        <polyline
          points="7 10 12 15 17 10"
        />
        <line
          x1="12"
          x2="12"
          y1="15"
          y2="3"
        />
      </svg>
    </Download>
    <p>
      Download PDF
    </p>
    <style
      jsx={true}
    >
      
      .download {
        font-family: 'PT Sans Caption', sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      p {
        margin-top: 0.5em;
      }
    
    </style>
  </div>
</Component>
`;

exports[`PDFLink component render function returns a loading icon while loading 1`] = `
<Component>
  <div
    className="loading-container"
  >
    <div
      className="loader"
    >
      <Loader
        color="currentColor"
        size="24"
      >
        <svg
          fill="none"
          height="24"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="2"
          viewBox="0 0 24 24"
          width="24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <line
            x1="12"
            x2="12"
            y1="2"
            y2="6"
          />
          <line
            x1="12"
            x2="12"
            y1="18"
            y2="22"
          />
          <line
            x1="4.93"
            x2="7.76"
            y1="4.93"
            y2="7.76"
          />
          <line
            x1="16.24"
            x2="19.07"
            y1="16.24"
            y2="19.07"
          />
          <line
            x1="2"
            x2="6"
            y1="12"
            y2="12"
          />
          <line
            x1="18"
            x2="22"
            y1="12"
            y2="12"
          />
          <line
            x1="4.93"
            x2="7.76"
            y1="19.07"
            y2="16.24"
          />
          <line
            x1="16.24"
            x2="19.07"
            y1="7.76"
            y2="4.93"
          />
        </svg>
      </Loader>
    </div>
    <div
      className="message"
    >
      <p>
        Loading
      </p>
    </div>
    <style
      jsx={true}
    >
      
      p {
        margin-top: 0.5em;
      }

      .loading-container {
        font-family: 'PT Sans Caption', sans-serif;
        display: flex;
        align-items: center;
        flex-direction: column;
      }

      .loader {
        display: flex;
        align-items: center;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        100% {
          transform: rotate(360deg);
        }
      }
    
    </style>
  </div>
</Component>
`;
